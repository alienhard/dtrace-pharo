/*
 * Generated by dtrace(1M).
 */

#ifndef	_SQUEAK_PROVIDER_H
#define	_SQUEAK_PROVIDER_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define SQUEAK_STABILITY "___dtrace_stability$Squeak$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define SQUEAK_TYPEDEFS "___dtrace_typedefs$Squeak$v2"

#define	SQUEAK_GCBEGIN() \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$gcbegin$v1(); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_GCBEGIN_ENABLED() \
	__dtrace_isenabled$Squeak$gcbegin$v1()
#define	SQUEAK_GCEND() \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$gcend$v1(); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_GCEND_ENABLED() \
	__dtrace_isenabled$Squeak$gcend$v1()
#define	SQUEAK_IGCBEGIN() \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$igcbegin$v1(); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_IGCBEGIN_ENABLED() \
	__dtrace_isenabled$Squeak$igcbegin$v1()
#define	SQUEAK_IGCEND() \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$igcend$v1(); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_IGCEND_ENABLED() \
	__dtrace_isenabled$Squeak$igcend$v1()
#define	SQUEAK_METHODENTER(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$methodenter$v1$63686172202a$63686172202a$696e74$696e74(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_METHODENTER_ENABLED() \
	__dtrace_isenabled$Squeak$methodenter$v1()
#define	SQUEAK_METHODRETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$methodreturn$v1$63686172202a$63686172202a$696e74(arg0, arg1, arg2); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_METHODRETURN_ENABLED() \
	__dtrace_isenabled$Squeak$methodreturn$v1()
#define	SQUEAK_OBJECTALLOC(arg0, arg1) \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$objectalloc$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_OBJECTALLOC_ENABLED() \
	__dtrace_isenabled$Squeak$objectalloc$v1()
#define	SQUEAK_PROC_TRANSFERTO(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " SQUEAK_TYPEDEFS); \
	__dtrace_probe$Squeak$proc_transferto$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " SQUEAK_STABILITY); \
} while (0)
#define	SQUEAK_PROC_TRANSFERTO_ENABLED() \
	__dtrace_isenabled$Squeak$proc_transferto$v1()


extern void __dtrace_probe$Squeak$gcbegin$v1(void);
extern int __dtrace_isenabled$Squeak$gcbegin$v1(void);
extern void __dtrace_probe$Squeak$gcend$v1(void);
extern int __dtrace_isenabled$Squeak$gcend$v1(void);
extern void __dtrace_probe$Squeak$igcbegin$v1(void);
extern int __dtrace_isenabled$Squeak$igcbegin$v1(void);
extern void __dtrace_probe$Squeak$igcend$v1(void);
extern int __dtrace_isenabled$Squeak$igcend$v1(void);
extern void __dtrace_probe$Squeak$methodenter$v1$63686172202a$63686172202a$696e74$696e74(char *, char *, int, int);
extern int __dtrace_isenabled$Squeak$methodenter$v1(void);
extern void __dtrace_probe$Squeak$methodreturn$v1$63686172202a$63686172202a$696e74(char *, char *, int);
extern int __dtrace_isenabled$Squeak$methodreturn$v1(void);
extern void __dtrace_probe$Squeak$objectalloc$v1$63686172202a$696e74(char *, int);
extern int __dtrace_isenabled$Squeak$objectalloc$v1(void);
extern void __dtrace_probe$Squeak$proc_transferto$v1$6c6f6e67$6c6f6e67$6c6f6e67$6c6f6e67(long, long, long, long);
extern int __dtrace_isenabled$Squeak$proc_transferto$v1(void);

#ifdef	__cplusplus
}
#endif

#endif	/* _SQUEAK_PROVIDER_H */
